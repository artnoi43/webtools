#!/usr/bin/env bash

if ! . webtools-init.sh; then
	echo "failed to init webtools for ${0#./}";
	exit 1;
fi

# web-tools.conf - initializes the variables, arrays, and sources source.sh
# (usually used by sh-tools or other webtools to source yn.sh and lb.sh).
# Settings are usually defined in associative arrays. Configurations defined in this file is all uppercased,
# while webtools script's local variables are in lowercase.

# This file is divided into sections.
# Any commented line starting with 3 hash signs is considered start of a section.
# Any commented line starting with 2 hash signs offers detailed guide and ideas behind the settings.

## The idea here is that each website is represented primarily by its source directory (where you write Markdowns).
## For each website, you'll need at least 3 directores
## (1) Source directory - this is where you put/write your Markdowns
## (2) Distribution directory - this is where you keep ssg outputs
## (3) Resources directory - this is where you keep your site resources such as style.css and other files.
## For example, this file will be populate to deal with 1 website, "Artnoi.com". This website has its
## source files in `artnoi.com.src`, and its resources in `artnoi.com.resc`, and its output it `artnoi.com.dist`.
## These directories are defined as string variable in `local_webtools_var.sh` and are used throughout the file.

### Section: Global webtools configuration
## These configurations are used by most of webtools components.
# WEB_DIST - a map of website source directories and their distribution directories
# WEB_RESC - a map of website source directories and their resource directories
# WEB_URLS - a map of website source directories and their URLs.
# WEB_NAMES - a map of website source directories and their names.

typeset -A WEB_DIST;
WEB_DIST["${johndoecomsrc}"]="${johndoecomdist}";

typeset -A WEB_RESC;
WEB_RESC["${johndoecomsrc}"]="${johndoecomresc}"

typeset -A WEB_URLS
WEB_URLS["${johndoecomsrc}"]='https://johndoe.com';

typeset -A WEB_NAMES
WEB_NAMES["${johndoecomsrc}"]='JohnDoe.com';

### Section: sendweb.sh configuration
## sendweb.sh loops over WEB_NAMES and prompts users if the distribution directory
## for a particular website should be sent over to the remote servers.
#
# SENDWEB_DESTS - a list of sendweb.sh destinations (scp)
# The keys are webtools destination server identifiers, i.e. short names,
# and the values are SSH location of the destination file (SSH path).
typeset -A SENDWEB_DESTS
SENDWEB_DESTS['vultr-alpine']='myalpine:~/web/.';

### Section: cleanup.sh configuration
## cleanup.sh uses find(1) to find and remove files whose names match
## a pattern in CLEANUP_PATTERNS
#
# CLEANUP_PATTERNS is a list of filenames to delete,
# CLEANUP_EXCLUDE will be excluded from being deleted.
CLEANUP_PATTERNS=( '.DS_Store' 'lost+found' '.files' );
CLEANUP_EXCLUDES='./.stversions';

### Section: linkweb.sh configuration
## linkweb.sh creates symbolic links from a website's resource directory
## to either source or distribution directory of the website.
## The configuration key is the website's source directory.
# LINK_RESCDIR is a hash map of a website source directory and its resource directory
# The following hash map variables define where a particilar resources
# can be found for a web source directory. Stricly needed resources are
# those with SSG in the name, since they are needed by ssg to generate a HTML
typeset -A \
	LINK_SSG_HEADER\
	LINK_SSG_FOOTER LINK\
	LINK_STYLECSS\
	LINK_SCRIPTJS\
	LINK_LOGO\
	LINK_BODYLOGO\
	LINK_FONTS;

LINK_SSG_HEADER["${johndoecomsrc}"]="${johndoecomresc}/_header.html";
LINK_SSG_FOOTER["${johndoecomsrc}"]="${johndoecomresc}/_footer.html";
LINK_STYLECSS["${johndoecomsrc}"]="${johndoecomresc}/style-minimal.css";
LINK_SCRIPTJS["${johndoecomsrc}"]="${johndoecomresc}/script.js";
LINK_BODYLOGO["${johndoecomsrc}"]="${johndoecomresc}/logo.svg";
LINK_LOGO["${johndoecomsrc}"]="${johndoecomresc}/logo.svg";
LINK_FONTS["${johndoecomsrc}"]="shared/fonts";
